---
description: 
globs: 
alwaysApply: false
---
# Development Guidelines

## General Practices
- Use Git for version control with atomic commits
- Follow semantic versioning
- Write meaningful commit messages
- Create a new branch for each feature
- Write clean, documented code
- Follow the DRY (Don't Repeat Yourself) principle
- Implement responsive design using mobile-first approach
- Use TypeScript for type safety where possible
- Keep performance in mind (lazy loading, code splitting)

## Coding Standards
- Use ESLint and Prettier for code formatting
- Follow Vue Style Guide (priority A and B rules)
- Use Vue Composition API consistently
- Implement CSS variables for theming
- Use Tailwind CSS for styling
- Use component-driven design
- Keep components small and focused
- Centralize reusable logic in composables
- Use Pinia for state management

## Project Structure
- Create a modular architecture
- Separate concerns appropriately
- Keep related files close together
- Organize components by feature/domain when possible
- Create shared components for reuse between sites
- Use named exports for better refactoring

## Testing Strategy
- Write unit tests for critical components and utilities
- Implement end-to-end tests for critical user journeys
- Test for accessibility (a11y)
- Test for responsive layouts
- Test both light and dark mode
- Validate for WCAG compliance

## Performance Considerations
- Optimize image loading (WebP format, responsive images)
- Implement lazy loading for images and components
- Use code splitting for better initial load time
- Monitor Lighthouse scores regularly
- Implement service workers for offline capabilities
- Cache API responses appropriately

## Deployment Process
- Set up CI/CD pipeline with Vercel
- Implement preview deployments for PR reviews
- Conduct pre-deployment checks
- Implement post-deployment smoke tests
- Set up error monitoring
- Configure proper redirects and headers

## Documentation
- Document API endpoints
- Document component usage with examples
- Keep a development journal/changelog
- Document third-party integrations
- Maintain a README with setup instructions 