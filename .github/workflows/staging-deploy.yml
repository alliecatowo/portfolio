name: Deploy to Staging

on:
  push:
    branches: [main]

env:
  FORCE_COLOR: 1
  CI: true

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: https://allie-portfolio-staging.web.app
    defaults:
      run:
        working-directory: .
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup mise (Node, pnpm)
        uses: jdx/mise-action@v2
        with:
          cache: true

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "pnpm-store-path=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm-store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Cache node_modules
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Run typecheck
        run: pnpm run typecheck

      - name: Build for deployment
        run: pnpm run generate

      - name: Deploy to Firebase Hosting Staging
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ALLIE_PORTFOLIO_PROJECT }}
          channelId: staging
          projectId: allie-portfolio-project
