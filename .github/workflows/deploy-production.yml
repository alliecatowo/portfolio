name: Deploy to Production

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Git tag to deploy'
        required: true
        type: string

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || inputs.tag }}

      - name: Setup mise (Node, pnpm)
        uses: jdx/mise-action@v2
        with:
          cache: true

      - name: Install tools via mise
        run: mise install

      - name: Install dependencies
        working-directory: ./frontend
        run: pnpm install --frozen-lockfile

      - name: Build (static)
        working-directory: ./frontend
        run: pnpm run generate

      - name: Authenticate to Google Cloud
        if: vars.USE_FIREBASE_CLI == 'true'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}

      - name: Deploy to Firebase App Hosting Production
        if: vars.USE_FIREBASE_CLI == 'true'
        run: |
          pnpm dlx firebase-tools apphosting:rollouts:create portfolio \
            --git-commit=${{ github.event.release.tag_name || inputs.tag }} \
            --force \
            --project=allie-portfolio-project

      - name: Create deployment status
        uses: actions/github-script@v7
        with:
          script: |
            const tag = '${{ github.event.release.tag_name || inputs.tag }}';
            github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment?.id || 0,
              state: 'success',
              environment_url: 'https://portfolio--portfolio-c1306.us-central1.hosted.app',
              description: `Deployed ${tag} to production`
            });
