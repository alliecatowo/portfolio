name: Preview Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write
  deployments: write

jobs:
  build-and-preview:
    runs-on: ubuntu-latest
    concurrency:
      group: preview-${{ github.event.pull_request.number }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup mise (Node, pnpm)
        uses: jdx/mise-action@v2
        with:
          cache: true

      - name: Install tools via mise
        run: mise install

      - name: Install dependencies
        working-directory: ./frontend
        run: pnpm install --frozen-lockfile

      - name: Build (static)
        working-directory: ./frontend
        run: pnpm run generate

      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}

      - name: Install Firebase CLI
        run: pnpm dlx firebase-tools --version

      - name: Deploy preview channel
        id: deploy
        env:
          CHANNEL_ID: pr-${{ github.event.pull_request.number }}
          PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID || 'portfolio-c1306' }}
        run: |
          set -e
          # Deploy to preview channel (expires after 7d)
          pnpm dlx firebase-tools hosting:channel:deploy "$CHANNEL_ID" --project "$PROJECT_ID" --expires 7d | tee deploy.log
          # Try to extract preview URL from output
          URL=$(grep -Eo 'https?://[^ ]+\.web\.app' deploy.log | head -n1 || true)
          echo "preview_url=$URL" >> "$GITHUB_OUTPUT"

      - name: Create PR comment with preview URL
        if: steps.deploy.outputs.preview_url != ''
        uses: actions/github-script@v7
        with:
          script: |
            const url = `${{ steps.deploy.outputs.preview_url }}`
            const body = `ðŸš€ Preview deployed: ${url}`
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            })

      - name: Create deployment (GitHub)
        uses: actions/github-script@v7
        with:
          script: |
            const url = `${{ steps.deploy.outputs.preview_url }}` || undefined
            const env = `preview/pr-${context.issue.number}`
            const create = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: env,
              auto_merge: false,
              required_contexts: []
            })
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: create.data.id,
              state: 'success',
              environment: env,
              environment_url: url
            })
