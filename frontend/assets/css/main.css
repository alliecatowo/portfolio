/* Custom Google Fonts */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Fira+Code:wght@400;500&display=swap');

@import "tailwindcss";
@import "@nuxt/ui";
@import "./accessibility.css";

/* Enhanced design tokens using Tailwind CSS v4 @theme directive */
@theme {
  /* Custom gradient definitions - More creative and vibrant */
  --gradient-dev: linear-gradient(135deg, var(--ui-color-primary-500) 0%, var(--ui-color-cyan-500) 30%, var(--ui-color-primary-600) 100%);
  --gradient-tattoo: linear-gradient(135deg, var(--ui-color-pink-400) 0%, var(--ui-color-rose-500) 50%, var(--ui-color-purple-600) 100%);
  --gradient-hero: linear-gradient(135deg, var(--ui-color-primary-500) 0%, var(--ui-color-pink-500) 33%, var(--ui-color-purple-500) 66%, var(--ui-color-primary-600) 100%);
  --gradient-card: linear-gradient(145deg, var(--ui-bg-elevated) 0%, color-mix(in oklab, var(--ui-bg-muted) 80%, var(--ui-color-primary-500) 20%) 100%);
  
  /* More dynamic animated gradient */
  --gradient-animated: linear-gradient(-45deg, var(--ui-color-primary-400), var(--ui-color-pink-500), var(--ui-color-purple-500), var(--ui-color-cyan-400), var(--ui-color-primary-600), var(--ui-color-rose-400));
  
  /* Enhanced glassmorphic effects */
  --glass-bg: color-mix(in oklab, var(--ui-bg) 80%, transparent);
  --glass-bg-strong: color-mix(in oklab, var(--ui-bg) 90%, transparent);
  --glass-border: color-mix(in oklab, var(--ui-border) 50%, transparent);
  --glass-border-accent: color-mix(in oklab, var(--ui-primary) 40%, transparent);
  
  /* Creative button gradients */
  --gradient-button-primary: linear-gradient(135deg, var(--ui-color-primary-500) 0%, var(--ui-color-pink-500) 100%);
  --gradient-button-soft: linear-gradient(135deg, color-mix(in oklab, var(--ui-color-primary-500) 20%, transparent) 0%, color-mix(in oklab, var(--ui-color-pink-500) 15%, transparent) 100%);
}

/* Base theme: white & pink (light), greyish-black & pink (dark) */
html, body {
  @apply bg-white text-gray-900 dark:bg-gray-950 dark:text-gray-100;
}

/* Shared container used across pages/components */
.container-custom {
  @apply w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8;
}

/* Utility for preview text clamping */
.line-clamp-3 {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Additional custom styles can be added here if needed */

/* Refined typography for markdown content */
.prose {
  @apply max-w-none;
}
.prose h1 {
  @apply mt-10 mb-4 text-4xl font-extrabold tracking-tight;
}
.prose h2 {
  @apply mt-8 mb-3 text-3xl font-bold tracking-tight;
}
.prose h3 {
  @apply mt-6 mb-2 text-2xl font-semibold;
}
.prose p {
  @apply my-4 leading-7;
}
.prose ul,
.prose ol {
  @apply my-4 pl-6;
}
.prose li {
  @apply leading-7;
}
.prose blockquote {
  @apply my-6 pl-4 border-l-4 border-pink-500/60 text-gray-700 dark:text-gray-300 italic;
}
.prose hr {
  @apply my-10 border-gray-200 dark:border-gray-800;
}
.prose pre {
  @apply my-3 p-4 rounded-xl ring-1 ring-gray-200 dark:ring-gray-800/60 overflow-x-auto bg-gray-50 dark:bg-gray-900/60;
}
.prose code:not(pre code) {
  @apply px-1.5 py-0.5 rounded-md bg-gray-100 dark:bg-gray-900/70 text-pink-600 dark:text-pink-400;
}

/* Bridge Nuxt UI tokens to utility-like classes for consistency */
/* These map to @nuxt/ui CSS variables so "primary" accents follow app.config.ts */
.text-primary { color: var(--ui-primary); }
.bg-primary { background-color: var(--ui-primary); }
.border-primary { border-color: var(--ui-primary); }

/* Enhanced semantic text utilities */
.text-default { color: var(--ui-text); }
.text-muted { color: var(--ui-text-muted); }
.bg-elevated { background-color: var(--ui-bg-elevated); }

/* Common patterns used in the app that relied on palette steps */
.text-primary-700 { color: var(--ui-primary); }
.text-primary-500 { color: var(--ui-primary); }
.dark .text-primary-400 { color: var(--ui-primary); }
.bg-primary-700 { background-color: var(--ui-primary); }
.ring-primary { --tw-ring-color: var(--ui-primary) !important; }

/* Opacity variants approximated via color-mix */
.bg-primary-700\/10 { background-color: color-mix(in oklab, var(--ui-primary) 10%, transparent); }
.bg-primary-700\/20 { background-color: color-mix(in oklab, var(--ui-primary) 20%, transparent); }
.bg-primary-700\/30 { background-color: color-mix(in oklab, var(--ui-primary) 30%, transparent); }

/* Explicitly set which shade feeds --ui-primary for visibility */
:root {
  --ui-primary: var(--ui-color-primary-600);
}
.dark {
  --ui-primary: var(--ui-color-primary-400);
}

/* Enhanced Glassmorphism utility classes */
.glass {
  background: var(--glass-bg);
  backdrop-filter: blur(12px) saturate(180%);
  border: 1px solid var(--glass-border);
  box-shadow: 0 8px 32px color-mix(in oklab, var(--ui-text) 10%, transparent), inset 0 1px 0 color-mix(in oklab, var(--ui-bg) 90%, white 10%);
}

.glass-strong {
  background: var(--glass-bg-strong);
  backdrop-filter: blur(20px) saturate(200%);
  border: 1px solid var(--glass-border-accent);
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.2);
}

.glass-accent {
  background: color-mix(in oklab, var(--glass-bg) 90%, var(--ui-color-primary-500) 10%);
  backdrop-filter: blur(16px) saturate(190%);
  border: 1px solid var(--glass-border-accent);
  box-shadow: 0 10px 36px rgba(236, 72, 153, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.15);
}

/* Gradient utility classes */
.bg-gradient-dev {
  background: var(--gradient-dev);
}

.bg-gradient-tattoo {
  background: var(--gradient-tattoo);
}

.bg-gradient-hero {
  background: var(--gradient-hero);
}

.bg-gradient-card {
  background: var(--gradient-card);
}

.bg-gradient-animated {
  background: var(--gradient-animated);
  background-size: 400% 400%;
  animation: gradient-shift 15s ease infinite;
}

/* Animation keyframes */
@keyframes gradient-shift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

@keyframes float {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  33% { transform: translateY(-8px) rotate(2deg); }
  66% { transform: translateY(-12px) rotate(-1deg); }
}

@keyframes sparkle {
  0%, 100% { opacity: 0; transform: scale(0.5) rotate(0deg); }
  50% { opacity: 1; transform: scale(1) rotate(180deg); }
}

@keyframes pulse-glow {
  0%, 100% { box-shadow: 0 0 20px rgba(236, 72, 153, 0.3); }
  50% { box-shadow: 0 0 40px rgba(236, 72, 153, 0.6), 0 0 60px rgba(147, 51, 234, 0.3); }
}

@keyframes text-glow {
  0%, 100% { text-shadow: 0 0 20px rgba(236, 72, 153, 0.5); }
  50% { text-shadow: 0 0 30px rgba(236, 72, 153, 0.8), 0 0 40px rgba(147, 51, 234, 0.4); }
}

@keyframes scale-in {
  0% { transform: scale(0.95); opacity: 0; }
  100% { transform: scale(1); opacity: 1; }
}

/* Enhanced hover effects */
.card-hover {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  transform-origin: center;
}

.card-hover:hover {
  transform: translateY(-8px) scale(1.02);
  box-shadow: 0 25px 50px -12px color-mix(in oklab, var(--ui-primary) 20%, transparent);
}

/* Enhanced Button styles with micro-interactions */
.btn-gradient {
  background: var(--gradient-button-primary);
  position: relative;
  overflow: hidden;
  border: 0;
  box-shadow: 0 4px 20px rgba(236, 72, 153, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.2);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.btn-gradient::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
  transition: left 0.6s ease;
}

.btn-gradient:hover {
  transform: translateY(-2px) scale(1.02);
  box-shadow: 0 8px 30px rgba(236, 72, 153, 0.4), inset 0 1px 0 rgba(255, 255, 255, 0.3);
}

.btn-gradient:hover::before {
  left: 100%;
}

/* Button with depth effect */
.btn-depth {
  position: relative;
  transform-style: preserve-3d;
  transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 0 4px 0 var(--ui-color-primary-700), 0 6px 12px rgba(0, 0, 0, 0.1);
}

.btn-depth:hover {
  transform: translateY(2px);
  box-shadow: 0 2px 0 var(--ui-color-primary-700), 0 4px 8px rgba(0, 0, 0, 0.15);
}

.btn-depth:active {
  transform: translateY(4px);
  box-shadow: 0 0 0 var(--ui-color-primary-700), 0 2px 4px rgba(0, 0, 0, 0.2);
}

/* Button with glow effect */
.btn-glow {
  position: relative;
  background: var(--ui-color-primary-500);
  animation: glow-pulse 2s ease-in-out infinite alternate;
}

@keyframes glow-pulse {
  0% {
    box-shadow: 0 0 5px var(--ui-color-primary-500), 0 0 10px var(--ui-color-primary-500), 0 0 15px var(--ui-color-primary-500);
  }
  100% {
    box-shadow: 0 0 10px var(--ui-color-primary-500), 0 0 20px var(--ui-color-primary-500), 0 0 30px var(--ui-color-primary-500);
  }
}

/* Button with ripple effect */
.btn-ripple {
  position: relative;
  overflow: hidden;
}

.btn-ripple::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.5);
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s;
}

.btn-ripple:active::after {
  width: 300px;
  height: 300px;
  opacity: 0;
}

/* Magnetic hover effect for interactive elements */
.magnetic-hover {
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.magnetic-hover:hover {
  animation: magnetic 0.5s ease-in-out;
}

@keyframes magnetic {
  0%, 100% { transform: translate(0, 0) scale(1); }
  25% { transform: translate(2px, -2px) scale(1.02); }
  50% { transform: translate(-2px, 2px) scale(1.01); }
  75% { transform: translate(1px, 1px) scale(1.02); }
}

.btn-soft-creative {
  background: color-mix(in oklab, var(--ui-primary) 20%, transparent);
  backdrop-filter: blur(10px);
  border: 1px solid color-mix(in oklab, var(--ui-primary) 30%, transparent);
  position: relative;
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.btn-soft-creative:hover {
  background: color-mix(in oklab, var(--ui-primary) 30%, transparent);
  transform: translateY(-1px);
  box-shadow: 0 6px 25px color-mix(in oklab, var(--ui-primary) 20%, transparent);
}

/* Loading skeleton enhancements */
.skeleton-shimmer {
  background: linear-gradient(90deg, var(--ui-bg-muted) 25%, var(--ui-bg-elevated) 50%, var(--ui-bg-muted) 75%);
  background-size: 200% 100%;
  animation: shimmer 2s infinite;
}

@keyframes shimmer {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}

/* Enhanced text gradients */
.text-gradient {
  background: var(--gradient-hero);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  background-size: 200% 200%;
  /* Fallback for better visibility */
  color: var(--ui-text);
}

/* Ensure better visibility on all backgrounds */
.text-gradient-strong {
  background: linear-gradient(135deg, var(--ui-color-primary-600) 0%, var(--ui-color-pink-500) 50%, var(--ui-color-rose-500) 100%);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  text-shadow: 0 0 20px rgba(236, 72, 153, 0.3);
}

.text-gradient-animated {
  background: linear-gradient(-45deg, #ec4899, #a855f7, #3b82f6, #06b6d4, #ec4899, #f43f5e);
  background-size: 400% 400%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: gradient-shift 8s ease infinite;
  filter: contrast(1.2) brightness(1.1);
  position: relative;
  z-index: 50;
}

/* Creative utility classes for visual appeal */
.float-animation {
  animation: float 6s ease-in-out infinite;
}

.sparkle-element {
  position: relative;
}

.sparkle-element::before {
  content: '✨';
  position: absolute;
  top: -10px;
  right: -10px;
  animation: sparkle 3s ease-in-out infinite;
  font-size: 1.2rem;
}

.pulse-glow {
  animation: pulse-glow 3s ease-in-out infinite alternate;
}

.hover-lift {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
  transform: translateY(-8px) scale(1.02);
  filter: brightness(1.1);
}

/* Creative background patterns */
.bg-dots {
  background-image: radial-gradient(circle, rgba(236, 72, 153, 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
}

.bg-grid {
  background-image: 
    linear-gradient(rgba(236, 72, 153, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(236, 72, 153, 0.1) 1px, transparent 1px);
  background-size: 40px 40px;
}
